import net.fabricmc.loom.task.RemapJar

plugins {
    id 'fabric-loom' version '0.2.2-SNAPSHOT'
    id "com.github.johnrengelman.shadow" version "4.0.3"
    id 'maven-publish'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "RoughlyEnoughItems"
group = "me.shedaniel"

def ENV = System.getenv()
version = project.mod_version + "+" + (ENV.BUILD_NUMBER ? ("build." + ENV.BUILD_NUMBER) : "local")

def includeDep = true

minecraft {
}

repositories {
    maven { url "https://tehnut.info/maven/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://minecraft.curseforge.com/api/maven" }
}

processResources {
    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
    inputs.property "version", project.version
}

configurations {
    included {
        transitive = false
    }
}

shadowJar {
    version = project.mod_version
    classifier = includeDep ? null : "bare"
    configurations = [project.configurations.included]
}

task remapShadowJar(type: RemapJar) {
    jar = shadowJar.archivePath
}
tasks.remapShadowJar.dependsOn tasks.shadowJar

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_version}"
    modCompile "net.fabricmc:fabric-loader:${project.fabricloader_version}"
    modCompile "net.fabricmc.fabric-api:fabric-keybindings-v0:${project.fabric_keybindings}"
    modCompile "net.fabricmc.fabric-api:fabric-api-base:${project.fabric_api_base}"
    modCompile "net.fabricmc.fabric-api:fabric-networking-v0:${project.fabric_networking}"
    modCompile "net.fabricmc.fabric-api:fabric-events-lifecycle-v0:${project.fabric_events_lifecycle}"
    modCompile "net.fabricmc.fabric-api:fabric-resource-loader-v0:${project.fabric_resource_loader}"
    modCompile "cloth:ClothEvents:${cloth_events_version}"
    modCompile "cloth-config:ClothConfig:${cloth_config_version}"
    if (includeDep) {
        include "net.fabricmc.fabric-api:fabric-keybindings-v0:${project.fabric_keybindings}"
        include "net.fabricmc.fabric-api:fabric-api-base:${project.fabric_api_base}"
        include "net.fabricmc.fabric-api:fabric-networking-v0:${project.fabric_networking}"
        include "net.fabricmc.fabric-api:fabric-events-lifecycle-v0:${project.fabric_events_lifecycle}"
        include "net.fabricmc.fabric-api:fabric-resource-loader-v0:${project.fabric_resource_loader}"
        include "cloth:ClothEvents:${cloth_events_version}"
        include "cloth-config:ClothConfig:${cloth_config_version}"
    }

    modCompile "blue.endless:jankson:${project.jankson_version}"
    included "blue.endless:jankson:${project.jankson_version}"

    modCompile "io.github.prospector.modmenu:ModMenu:${modmenu_version}"
    compile "org.lwjgl:lwjgl-jemalloc:3.2.1"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		if (project.hasProperty('danielshe_pass')) {
			maven {
				url = "http://deploy.modmuss50.me/"
				credentials {
					username = "danielshe"
					password = project.getProperty('danielshe_pass')
				}
			}
		}
	}
}